{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "userPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "The user user principal Id. Ex: username.microsoft.com"
      }
    }
  },
  "functions": [],
  "variables": {
    "KeyVaultName": "[format('{0}-d-kv', resourceGroup().name)]",
    "HubName": "[format('{0}-d-hub', resourceGroup().name)]",
    "DpsName": "[format('{0}-d-dps', resourceGroup().name)]",
    "TsiName": "[format('{0}-d-tsi', resourceGroup().name)]",
    "TsiStorageAccountName": "[format('{0}dstorage', resourceGroup().name)]",
    "AzureMapsAccountName": "[format('{0}-d-maps', resourceGroup().name)]",
    "tsiGroupName": "tsi",
    "userIdentityName": "userIdentity",
    "roleAssignmentName": "[guid(uniqueString(resourceGroup().name))]",
    "ownerRoleDefinitionId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
    "groupEnrollmentId": "weatherstations",
    "hubKeysId": "[resourceId('Microsoft.Devices/IotHubs/Iothubkeys', variables('HubName'), 'iothubowner')]",
    "eventHubKeysId": "[resourceId('Microsoft.Devices/IotHubs/Iothubkeys', variables('HubName'), 'service')]",
    "dpsKeysId": "[resourceId('Microsoft.Devices/ProvisioningServices/keys', variables('DpsName'), 'provisioningserviceowner')]",
    "azureMapsKeysId": "[resourceId('Microsoft.Maps/accounts', variables('AzureMapsAccountName'))]",
    "containerRegistryPasswordId": "/subscriptions/d370e64f-339c-46fa-b9c2-da4a4c706ea0/resourceGroups/swIoTShow/providers/Microsoft.ContainerRegistry/registries/swickcontainers"
  },
  "resources": [
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2020-08-01",
      "name": "[variables('HubName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "routing": {
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "isEnabled": true,
            "endpointNames": [
              "events"
            ]
          },
          "routes": [
            {
              "name": "deviceLifecycle",
              "source": "DeviceLifecycleEvents",
              "isEnabled": true,
              "endpointNames": [
                "events"
              ]
            },
            {
              "name": "digitalTwinChanges",
              "source": "DigitalTwinChangeEvents",
              "isEnabled": true,
              "endpointNames": [
                "events"
              ]
            },
            {
              "name": "deviceTwinChanges",
              "source": "TwinChangeEvents",
              "isEnabled": true,
              "endpointNames": [
                "events"
              ]
            }
          ]
        }
      },
      "sku": {
        "name": "S1",
        "capacity": 1
      }
    },
    {
      "type": "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
      "apiVersion": "2020-03-01",
      "name": "[format('{0}/events/serviceapp', variables('HubName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
      "apiVersion": "2020-03-01",
      "name": "[format('{0}/events/{1}', variables('HubName'), variables('tsiGroupName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/provisioningServices",
      "apiVersion": "2017-11-15",
      "name": "[variables('DpsName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "capacity": 1
      },
      "properties": {
        "iotHubs": [
          {
            "location": "[resourceGroup().location]",
            "connectionString": "[format('HostName={0}.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey={1}', variables('HubName'), listkeys(variables('hubKeysId'), '2020-01-01').primaryKey)]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('userIdentityName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('roleAssignmentName')]",
      "properties": {
        "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', subscription().subscriptionId, variables('ownerRoleDefinitionId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName')), '2018-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "createDpsEnrollmentGroup",
      "kind": "AzureCLI",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]": {}
        }
      },
      "properties": {
        "azCliVersion": "2.9.1",
        "retentionInterval": "P1D",
        "scriptContent": "[format('az extension add --name azure-iot; az iot dps enrollment-group create -g {0} --dps-name {1} --enrollment-id {2}', resourceGroup().name, variables('DpsName'), variables('groupEnrollmentId'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/provisioningServices', variables('DpsName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-02-01",
      "name": "[variables('TsiStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": false
      }
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "apiVersion": "2020-05-15",
      "name": "[variables('TsiName')]",
      "location": "[resourceGroup().location]",
      "kind": "Gen2",
      "sku": {
        "name": "L1",
        "capacity": 1
      },
      "properties": {
        "storageConfiguration": {
          "accountName": "[variables('TsiStorageAccountName')]",
          "managementKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('TsiStorageAccountName')), '2018-02-01').keys[0].value]"
        },
        "timeSeriesIdProperties": [
          {
            "name": "iothub-connection-device-id",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('TsiStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments/accessPolicies",
      "apiVersion": "2020-05-15",
      "name": "[format('{0}/readerAccessPolicy1', variables('TsiName'))]",
      "properties": {
        "principalObjectId": "[parameters('userPrincipalId')]",
        "roles": [
          "Reader"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.TimeSeriesInsights/environments', variables('TsiName'))]"
      ]
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments/eventSources",
      "apiVersion": "2020-05-15",
      "name": "[format('{0}/dogfoodsource', variables('TsiName'))]",
      "kind": "Microsoft.IoTHub",
      "location": "[resourceGroup().location]",
      "properties": {
        "iotHubName": "[variables('HubName')]",
        "consumerGroupName": "[variables('tsiGroupName')]",
        "eventSourceResourceId": "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]",
        "keyName": "iothubowner",
        "sharedAccessKey": "[listkeys(variables('hubKeysId'), '2019-11-04').primaryKey]",
        "timestampPropertyName": "iothub-connection-device-id"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]",
        "[resourceId('Microsoft.TimeSeriesInsights/environments', variables('TsiName'))]",
        "[resourceId('Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups', split(format('{0}/events/{1}', variables('HubName'), variables('tsiGroupName')), '/')[0], split(format('{0}/events/{1}', variables('HubName'), variables('tsiGroupName')), '/')[1], split(format('{0}/events/{1}', variables('HubName'), variables('tsiGroupName')), '/')[2])]"
      ]
    },
    {
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2020-02-01-preview",
      "name": "[variables('AzureMapsAccountName')]",
      "location": "global",
      "sku": {
        "name": "S0"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('KeyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForDiskEncryption": false,
        "accessPolicies": [],
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "enableSoftDelete": false,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices",
          "ipRules": [],
          "virtualNetworkRules": []
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/IotHubConnectionString')]",
      "properties": {
        "value": "[format('HostName={0}.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey={1}', variables('HubName'), listkeys(variables('hubKeysId'), '2019-11-04').primaryKey)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/EventHubEndpoint')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Devices/IotHubs', variables('HubName'))).eventHubEndpoints.events.endpoint]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/EventHubPath')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Devices/IotHubs', variables('HubName'))).eventHubEndpoints.events.path]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('HubName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/EventHubKey')]",
      "properties": {
        "value": "[listkeys(variables('eventHubKeysId'), '2019-11-04').primaryKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/DpsScopeId')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Devices/provisioningServices', variables('DpsName'))).idScope]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/provisioningServices', variables('DpsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/DpsPrimaryKey')]",
      "properties": {
        "value": "[listkeys(variables('dpsKeysId'), '2017-11-15').primaryKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/AzureMapsPrimaryKey')]",
      "properties": {
        "value": "[listkeys(variables('azureMapsKeysId'), '2020-02-01-preview').primaryKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('KeyVaultName'), '/ContainerRegistryPassword')]",
      "properties": {
        "value": "[listCredentials(variables('containerRegistryPasswordId'), '2017-10-01').passwords[0].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ]
    }
  ]
}